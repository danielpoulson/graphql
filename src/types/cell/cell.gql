type Cell {
  machno: Int
  downtime: String
  runtime: String
  downpc: Int
  units: Int
  avail: Int
  perf: Int
  oee: Int
  monthlyOEE: Int
  idle: Int
  unitsmin: Int
  downnone: Int
  date: String
  shiftseq: String
}

input NewCellInput {
  machno: Int
  downtime: String
  runtime: String
  downpc: Int
  units: Int
  avail: Int
  perf: Int
  oee: Int
  monthlyOEE: Int
  idle: Int
  unitsmin: Int
  downnone: Int
  date: String
}

input UpdateCellInput {
  machno: Int
  downtime: String
  runtime: String
  downpc: Int
  units: Int
  avail: Int
  perf: Int
  oee: Int
  monthlyOEE: Int
  idle: Int
  unitsmin: Int
  downnone: Int
  date: String
}

type Query {
  getCell: Cell
  getCells: [Cell]
}

type Mutation {
  newCell(input: NewCellInput!): Cell!
  updateCell(id: ID!, input: UpdateCellInput!): Cell!
  removeCell(id: ID!): Cell!
}
